
// Generated from /var/www/packages/css/scripts/definitions.js
module.exports = {
    '::attr()': '::attr(<namespace-attr>?)',
    '::part()': '::part(<ident>+)',
    'abs()': 'abs(<calc-sum>)',
    'absolute-color-base': '<hex-color> | <named-color> | transparent | <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <lab()> | <lch()> | <oklab()> | <oklch()> | <color()>',
    'absolute-size': 'xx-small | x-small | small | medium | large | x-large | xx-large',
    'acos()': 'acos(<calc-sum>)',
    'age': 'child | young | old',
    'alpha-value': '<number> | <percentage>',
    'an+b': "odd | even | <integer> | <n-dimension> | '+'? n | -n | <ndashdigit-dimension> | '+'? <ndashdigit-ident> | <dashndashdigit-ident> | <n-dimension> <signed-integer> | '+'? n <signed-integer> | -n <signed-integer> | <ndash-dimension> <signless-integer> | '+'? n- <signless-integer> | -n- <signless-integer> | <n-dimension> ['+' | '-'] <signless-integer> | '+'? n ['+' | '-'] <signless-integer> | -n ['+' | '-'] <signless-integer>",
    'angle-percentage': '<angle> | <percentage>',
    'angular-color-hint': '<angle-percentage>',
    'angular-color-stop': '<color> && <color-stop-angle>?',
    'angular-color-stop-list': '<angular-color-stop> , [<angular-color-hint>? , <angular-color-stop>]#?',
    'animateable-feature': 'scroll-position | contents | <custom-ident>',
    'annotation()': 'annotation(<feature-value-name>)',
    'arc-command': 'arc <by-to> <coordinate-pair> of <length-percentage>{1,2} [<arc-sweep> || <arc-size> || <angle>]?',
    'arc-size': 'large | small',
    'arc-sweep': 'cw | ccw',
    'asin()': 'asin(<calc-sum>)',
    'atan()': 'atan(<calc-sum>)',
    'atan2()': 'atan2(<calc-sum>, <calc-sum>)',
    'attachment': 'scroll | fixed | local',
    'attr()': 'attr(<q-name> <attr-type>? , <declaration-value>?)',
    'attr-matcher': "['~' | '|' | '^' | '$' | '*']? '='",
    'attr-modifier': 'i | s',
    'attr-type': 'string | url | ident | color | number | percentage | length | angle | time | frequency | flex | <dimension-unit>',
    'attribute-selector': "'[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [<string-token> | <ident-token>] <attr-modifier>? ']'",
    'auto()': 'auto(<lang>)',
    'auto-repeat': 'repeat([auto-fill | auto-fit] , [<line-names>? <fixed-size>]+ <line-names>?)',
    'auto-track-list': '[<line-names>? [<fixed-size> | <fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size> | <fixed-repeat>]]* <line-names>?',
    'baseline-position': '[first | last]? && baseline',
    'basic-shape': '<inset()> | <circle()> | <ellipse()> | <polygon()> | <path()>',
    'bg-clip': '<box> | border | text',
    'bg-image': '<image> | none',
    'bg-layer': '<bg-image> || <bg-position> [/ <bg-size>]? || <repeat-style> || <attachment> || <box> || <box>',
    'bg-position': '[left | center | right | top | bottom | <length-percentage>] | [left | center | right | <length-percentage>] [top | center | bottom | <length-percentage>] | [center | [left | right] <length-percentage>?] && [center | [top | bottom] <length-percentage>?]',
    'bg-size': '[<length-percentage [0,âˆž]> | auto]{1,2} | cover | contain',
    'blend-mode': 'normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity',
    'blur()': 'blur(<length>?)',
    'bottom': '<length> | auto',
    'box': 'border-box | padding-box | content-box',
    'brightness()': 'brightness(<number-percentage>?)',
    'by-to': 'by | to',
    'calc()': 'calc(<calc-sum>)',
    'calc-constant': 'e | pi | infinity | -infinity | NaN',
    'calc-product': "<calc-value> [['*' | '/'] <calc-value>]*",
    'calc-sum': "<calc-product> [['+' | '-'] <calc-product>]*",
    'calc-value': '<number> | <dimension> | <percentage> | <calc-constant> | (<calc-sum>)',
    'cf-image': '<percentage>? && [<image> | <color>]',
    'character-variant()': 'character-variant(<feature-value-name>#)',
    'child()': 'child(<integer>)',
    'circle()': 'circle(<shape-radius>? [at <position>]?)',
    'clamp()': 'clamp(<calc-sum>#{3})',
    'class-selector': "'.' <ident-token>",
    'clip-source': '<url>',
    'cmyk-component': '<number> | <percentage>',
    'color': '<absolute-color-base> | currentcolor | <system-color> | <device-cmyk()>',
    'color()': 'color(<colorspace-params> [/ <alpha-value>]?)',
    'color-contrast()': 'color-contrast(<color> vs <color>#{2,} [to [<number> | AA | AA-large | AAA | AAA-large]]?)',
    'color-font-tech': 'color-COLRv0 | color-COLRv1 | color-SVG | color-sbix | color-CBDT',
    'color-interpolation-method': 'in [<rectangular-color-space> | <polar-color-space> <hue-interpolation-method>?]',
    'color-mix()': 'color-mix(<color-interpolation-method> , [<color> && <percentage [0,100]>?]#{2})',
    'color-space': '<rectangular-color-space> | <polar-color-space>',
    'color-stop': '<color-stop-length> | <color-stop-angle>',
    'color-stop-angle': '<angle-percentage>{1,2}',
    'color-stop-length': '<length-percentage>{1,2}',
    'color-stop-list': '<linear-color-stop> , [<linear-color-hint>? , <linear-color-stop>]#?',
    'colorspace-params': '<predefined-rgb-params> | <xyz-params>',
    'combinator': "'>' | '+' | '~' | ['|' '|']",
    'common-lig-values': 'common-ligatures | no-common-ligatures',
    'compat-auto': 'searchfield | textarea | push-button | slider-horizontal | checkbox | radio | square-button | menulist | listbox | meter | progress-bar | button',
    'complex-selector': '[<compound-selector> | <nesting-selector>] [<combinator>? [<compound-selector> | <nesting-selector>]]*',
    'complex-selector-list': '<complex-selector>#',
    'composite-mode': 'clear | copy | source-over | destination-over | source-in | destination-in | source-out | destination-out | source-atop | destination-atop | xor | lighter | plus-darker | plus-lighter',
    'compositing-operator': 'add | subtract | intersect | exclude',
    'compound-selector': '[<type-selector>? <subclass-selector>* [<pseudo-element-selector> <pseudo-class-selector>*]*]!',
    'compound-selector-list': '<compound-selector>#',
    'conic-gradient()': 'conic-gradient([from <angle>]? [at <position>]?, <angular-color-stop-list>)',
    'container-condition': 'not <container-query> | <container-query> [and <container-query>]* | <container-query> [or <container-query>]*',
    'container-query': '(<container-condition>) | size(<size-query>) | style(<style-query>)',
    'content()': 'content([text | before | after | first-letter | marker]?)',
    'content-distribution': 'space-between | space-around | space-evenly | stretch',
    'content-level': 'element | content | text | attr(<custom-ident>) | counter() | counters()',
    'content-list': '[<string> | <content()> | contents | <image> | <counter> | <quote> | <target> | <leader()>]+',
    'content-position': 'center | start | end | flex-start | flex-end',
    'content-replacement': '<image>',
    'contextual-alt-values': 'contextual | no-contextual',
    'contrast()': 'contrast(<number-percentage>?)',
    'control-point': '<number> ,? <number> ,? <number> ,? <number>',
    'coord-box': 'content-box | padding-box | border-box | fill-box | stroke-box | view-box',
    'coordinate-pair': '<length-percentage>{2}',
    'cos()': 'cos(<calc-sum>)',
    'counter': '<counter()> | <counters()>',
    'counter()': 'counter(<counter-name>, <counter-style>?)',
    'counter-name': '<custom-ident>',
    'counter-style': '<counter-style-name> | <symbols()>',
    'counter-style-name': '<custom-ident>',
    'counters()': 'counters(<counter-name>, <string>, <counter-style>?)',
    'cross-fade()': 'cross-fade(<cf-image>#)',
    'css-wide-keyword': 'inherit | initial | revert | unset',
    'cubic-bezier()': 'cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)',
    'cubic-bezier-easing-function': 'ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)',
    'current()': 'current(<selector-list>)',
    'curve-command': 'curve <by-to> <coordinate-pair> via <coordinate-pair>{1,2}',
    'custom-arg': '$ <ident-token> ;',
    'custom-params': '<dashed-ident> [<number> | <percentage> | none]#',
    'custom-selector': '<custom-arg>? : <extension-name> [(<custom-arg>+#?)]? ;',
    'dasharray': '[[<length-percentage> | <number>]+]#',
    'device-cmyk()': 'device-cmyk(<cmyk-component>{4} [/ <alpha-value>]?)',
    'dimension': '<length> | <time> | <frequency> | <resolution> | <angle> | <decibel> | <flex> | <semitones>',
    'dimension-unit': '"%" | deg | grad | rad | turn | dB | fr | hz | khz | ch | cm | em | ex | in | lh | mm | pc | pt | px | q | rem | vh | vmin | vmax | vw | dpcm | dpi | dppx | x | st | ms | s',
    'dir()': 'dir(<ident>)',
    'discretionary-lig-values': 'discretionary-ligatures | no-discretionary-ligatures',
    'display-box': 'contents | none',
    'display-inside': 'flow | flow-root | table | flex | grid | ruby',
    'display-internal': 'table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container',
    'display-legacy': 'inline-block | inline-table | inline-flex | inline-grid',
    'display-listitem': '<display-outside>? && [flow | flow-root]? && list-item',
    'display-outside': 'block | inline | run-in',
    'drop-shadow()': 'drop-shadow(<color>? && <length>{2,3})',
    'easing-function': 'linear | <cubic-bezier-easing-function> | <step-easing-function>',
    'east-asian-variant-values': 'jis78 | jis83 | jis90 | jis04 | simplified | traditional',
    'east-asian-width-values': 'full-width | proportional-width',
    'element()': 'element(<id-selector>)',
    'element-offset': 'selector(<id-selector>) [<element-offset-edge> || <number>]?',
    'element-offset-edge': 'start | end',
    'ellipse()': 'ellipse([<shape-radius>{2}]? [at <position>]?)',
    'end-value': '<number> | <dimension> | <percentage>',
    'ending-shape': 'circle | ellipse',
    'env()': 'env(<custom-ident> <integer [0,âˆž]>*, <declaration-value>?)',
    'exp()': 'exp(<calc-sum>)',
    'explicit-track-list': '[<line-names>? <track-size>]+ <line-names>?',
    'extension-name': '<dashed-ident>',
    'fade()': 'fade(<length> | <percentage>)',
    'family-name': '<string> | <custom-ident>',
    'feature-tag-value': '<string> [<integer> | on | off]?',
    'feature-value-block': '<font-feature-value-type> { <declaration-list> }',
    'feature-value-name': '<ident>',
    'filter()': 'filter([<image> | <string>], <filter-value-list>)',
    'filter-function': '<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>',
    'filter-value-list': '[<filter-function> | <url>]+',
    'final-bg-layer': "<'background-color'> || <bg-image> || <bg-position> [/ <bg-size>]? || <repeat-style> || <attachment> || <box> || <box>",
    'fit-content()': 'fit-content(<length-percentage>)',
    'fixed-breadth': '<length-percentage>',
    'fixed-repeat': 'repeat([<integer [1,âˆž]>] , [<line-names>? <fixed-size>]+ <line-names>?)',
    'fixed-size': '<fixed-breadth> | minmax(<fixed-breadth> , <track-breadth>) | minmax(<inflexible-breadth> , <fixed-breadth>)',
    'font-feature-tech': 'feature-opentype | feature-aat | feature-graphite',
    'font-feature-value-type': '@stylistic | @historical-forms | @styleset | @character-variant | @swash | @ornaments | @annotation',
    'font-format': '<string> | collection | embedded-opentype | opentype | svg | truetype | woff | woff2',
    'font-stretch-css3': 'normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded',
    'font-tech': '<font-feature-tech> | <color-font-tech> | variations | palettes | incremental',
    'font-variant-css2': 'normal | small-caps',
    'font-weight-absolute': 'normal | bold | <number [1,1000]>',
    'frequency-percentage': '<frequency> | <percentage>',
    'gender': 'male | female | neutral',
    'general-enclosed': '<function> | (<ident> <any-value>)',
    'generic-family': 'cursive | emoji | fangsong | fantasy | math | monospace | sans-serif | serif | system-ui | ui-monospace | ui-rounded | ui-sans-serif | ui-serif',
    'generic-voice': '<age>? <gender> <integer>?',
    'geometry-box': '<shape-box> | fill-box | stroke-box | view-box',
    'gradient': '<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()> | <repeating-conic-gradient()>',
    'grayscale()': 'grayscale(<number-percentage>?)',
    'grid-line': 'auto | <custom-ident> | [<integer> && <custom-ident>?] | [span && [<integer> || <custom-ident>]]',
    'has()': 'has(<forgiving-relative-selector-list>)',
    'historical-lig-values': 'historical-ligatures | no-historical-ligatures',
    'hsl()': 'hsl(<hue> <percentage> <percentage> [/ <alpha-value>]? | <hue> , <percentage> , <percentage> , <alpha-value>?)',
    'hsla()': '<hsl()>',
    'hue': '<number> | <angle> | none',
    'hue-interpolation-method': '[shorter | longer | increasing | decreasing | specified] hue',
    'hue-rotate()': 'hue-rotate([<angle> | <zero>]?)',
    'hv-line-command': '[hline | vline] <by-to> <length-percentage>',
    'hwb()': 'hwb(<hue> <percentage> <percentage> [/ <alpha-value>]?)',
    'hypot()': 'hypot(<calc-sum>#)',
    'id': '<id-selector>',
    'id-selector': '<hash-token>',
    'image': '<url> | <image()> | <image-set()> | <cross-fade()> | <element()> | <gradient>',
    'image()': 'image(<image-tags>? [<image-src>? , <color>?]!)',
    'image-set()': 'image-set(<image-set-option>#)',
    'image-set-option': '[<image> | <string>] [<resolution> || type(<string>)]',
    'image-src': '<url> | <string>',
    'image-tags': 'ltr | rtl',
    'inflexible-breadth': '<length-percentage> | min-content | max-content | auto',
    'inset()': "inset(<length-percentage>{1,4} [round <'border-radius'>]?)",
    'invert()': 'invert(<number-percentage>?)',
    'is()': 'is(<forgiving-selector-list>)',
    'isolation-mode': 'auto | isolate',
    'keyframe-block': '<keyframe-selector># { <declaration-list> }',
    'keyframe-selector': 'from | to | <percentage>',
    'keyframes-name': '<custom-ident> | <string>',
    'lab()': 'lab(<percentage> <number> <number> [/ <alpha-value>]?)',
    'lang': '<ident> | <string>',
    'lang()': 'lang([<ident> | <string>]#)',
    'layer-name': "<ident> ['.' <ident>]*",
    'layout()': 'layout()',
    'layout-box': 'content-box | padding-box | border-box | margin-box',
    'lch()': 'lch(<percentage> <number> <hue> [/ <alpha-value>]?)',
    'leader()': 'leader(<leader-type>)',
    'leader-type': 'dotted | solid | space | <string>',
    'left': '<length> | auto',
    'length-percentage': '<length> | <percentage>',
    'line-command': 'line <by-to> <coordinate-pair>',
    'line-name-list': '[<line-names> | <name-repeat>]+',
    'line-names': "'[' <custom-ident>* ']'",
    'line-style': 'none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset',
    'line-width': '<length [0,âˆž]> | thin | medium | thick',
    'linear-color-hint': '<length-percentage>',
    'linear-color-stop': '<color> && <color-stop-length>?',
    'linear-gradient()': 'linear-gradient([<angle> | to <side-or-corner>]? , <color-stop-list>)',
    'log()': 'log(<calc-sum>, <calc-sum>?)',
    'marker-ref': '<url>',
    'mask-layer': '<mask-reference> || <position> [/ <bg-size>]? || <repeat-style> || <geometry-box> || [<geometry-box> | no-clip] || <compositing-operator> || <masking-mode>',
    'mask-reference': 'none | <image> | <mask-source>',
    'mask-source': '<url>',
    'masking-mode': 'alpha | luminance | match-source',
    'math-function': '<calc()> | <min()> | <max()> | <clamp()> | <round()> | <mod()> | <rem()> | <sin()> | <cos()> | <tan()> | <asin()> | <acos()> | <atan()> | <atan2()> | <pow()> | <sqrt()> | <hypot()> | <log()> | <exp()> | <abs()> | <sign()>',
    'matrix()': 'matrix(<number>#{6})',
    'matrix3d()': 'matrix3d(<number>#{16})',
    'max()': 'max(<calc-sum>#)',
    'media()': 'media(<mf-plain> | <mf-boolean> | <mf-range>)',
    'media-and': 'and <media-in-parens>',
    'media-condition': '<media-not> | <media-in-parens> [<media-and>* | <media-or>*]',
    'media-condition-without-or': '<media-not> | <media-in-parens> <media-and>*',
    'media-feature': '(<mf-plain> | <mf-boolean> | <mf-range>)',
    'media-in-parens': '(<media-condition>) | <media-feature> | <general-enclosed>',
    'media-not': 'not <media-in-parens>',
    'media-or': 'or <media-in-parens>',
    'media-query': '<media-condition> | [not | only]? <media-type> [and <media-condition-without-or>]?',
    'media-type': '<ident>',
    'mf-boolean': '<mf-name>',
    'mf-comparison': '<mf-lt> | <mf-gt> | <mf-eq>',
    'mf-eq': "'='",
    'mf-gt': "'>' '='?",
    'mf-lt': "'<' '='?",
    'mf-name': '<ident>',
    'mf-plain': '<mf-name> : <mf-value>',
    'mf-range': '<mf-name> <mf-comparison> <mf-value> | <mf-value> <mf-comparison> <mf-name> | <mf-value> <mf-lt> <mf-name> <mf-lt> <mf-value> | <mf-value> <mf-gt> <mf-name> <mf-gt> <mf-value>',
    'mf-value': '<number> | <dimension> | <ident> | <ratio>',
    'min()': 'min(<calc-sum>#)',
    'mod()': 'mod(<calc-sum>, <calc-sum>)',
    'move-command': 'move <by-to> <coordinate-pair>',
    'na-name': "<ident> | '*'",
    'na-prefix': "<ident> | '*'",
    'name-repeat': 'repeat([<integer [1,âˆž]> | auto-fill], <line-names>+)',
    'named-color': 'aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen',
    'namespace-attr': "[<na-prefix>? '|']? <na-name>",
    'namespace-prefix': '<ident>',
    'nesting-selector': "'&'",
    'not()': 'not(<selector-list>)',
    'ns-prefix': "[<ident-token> | '*']? '|'",
    'nth()': '(An+B [of <custom-ident>]?)',
    'nth-child()': 'nth-child(<an+b> [of <selector-list>]?)',
    'nth-col()': 'nth-col(<an+b>)',
    'nth-last-child()': 'nth-last-child(<an+b> [of <selector-list>]?)',
    'nth-last-col()': 'nth-last-col(<an+b>)',
    'nth-last-of-type()': 'nth-last-of-type(<an+b>)',
    'nth-of-type()': 'nth-of-type(<an+b>)',
    'number-optional-number': '<number> <number>?',
    'number-percentage': '<number> | <percentage>',
    'numeric-figure-values': 'lining-nums | oldstyle-nums',
    'numeric-fraction-values': 'diagonal-fractions | stacked-fractions',
    'numeric-spacing-values': 'proportional-nums | tabular-nums',
    'oklab()': 'oklab([from <color>]? [<percentage> | none] [<number> | none] [<number> | none] [/ [<alpha-value> | none]]?)',
    'oklch()': 'oklch([from <color>]? [<percentage> | none] [<number> | none] [<hue> | none] [/ [<alpha-value> | none]]?)',
    'opacity()': 'opacity(<number-percentage>?)',
    'ornaments()': 'ornaments(<feature-value-name>)',
    'outline-line-style': 'none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset | auto',
    'overflow-position': 'unsafe | safe',
    'page-selector': '[<ident-token>? <pseudo-page>*]!',
    'page-selector-list': '<page-selector>#',
    'page-size': 'A5 | A4 | A3 | B5 | B4 | JIS-B5 | JIS-B4 | letter | legal | ledger',
    'paint': 'none | <color> | <url> [none | <color>]? | context-fill | context-stroke',
    'paint()': 'paint(<ident>, <declaration-value>?)',
    'paint-box': 'content-box | padding-box | border-box | fill-box | stroke-box',
    'palette-identifier': '<custom-ident>',
    'path()': "path(<'fill-rule'>? , <string>)",
    'perspective()': 'perspective(<length [0,âˆž]> | none)',
    'points': '[<number>+]#',
    'polar-color-space': 'hsl | hwb | lch | oklch',
    'polygon()': "polygon(<'fill-rule'>? , [<length-percentage> <length-percentage>]#)",
    'position': '[left | center | right] || [top | center | bottom] | [left | center | right | <length-percentage>] [top | center | bottom | <length-percentage>]? | [[left | right] <length-percentage>] && [[top | bottom] <length-percentage>]',
    'pow()': 'pow(<calc-sum>, <calc-sum>)',
    'predefined-rgb': 'srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020',
    'predefined-rgb-params': '<predefined-rgb> [<number> | <percentage> | none]{3}',
    'pseudo-class-selector': "':' <ident> | ':' <function>",
    'pseudo-element-selector': "':' <pseudo-class-selector>",
    'pseudo-page': "':' [left | right | first | blank]",
    'q-name': '<wq-name>',
    'quote': 'open-quote | close-quote | no-open-quote | no-close-quote',
    'radial-gradient()': 'radial-gradient([<ending-shape> || <size>]? [at <position>]? , <color-stop-list>)',
    'ratio': '<number [0,âˆž]> [/ <number [0,âˆž]>]?',
    'ray()': 'ray(<angle> && <size> && contain?)',
    'rect()': 'rect(<top>, <right>, <bottom>, <left>)',
    'rectangular-color-space': 'srgb | srgb-linear | lab | oklab | xyz | xyz-d50 | xyz-d65',
    'relative-selector': '<combinator>? <complex-selector>',
    'relative-selector-list': '<relative-selector>#',
    'relative-size': 'larger | smaller',
    'rem()': 'rem(<calc-sum>, <calc-sum>)',
    'repeat-style': 'repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}',
    'repeating-conic-gradient()': '<conic-gradient()>',
    'repeating-linear-gradient()': '<linear-gradient()>',
    'repeating-radial-gradient()': '<radial-gradient()>',
    'reversed-counter-name': 'reversed(<counter-name>)',
    'rgb()': 'rgb(<percentage>{3} [/ <alpha-value>]? | <number>{3} [/ <alpha-value>]? | <percentage>#{3} , <alpha-value>? | <number>#{3} , <alpha-value>?)',
    'rgba()': '<rgb()>',
    'right': '<length> | auto',
    'rotate()': 'rotate(<angle> | <zero>)',
    'rotate3d()': 'rotate3d(<number> , <number> , <number> , [<angle> | <zero>])',
    'rotateX()': 'rotateX(<angle> | <zero>)',
    'rotateY()': 'rotateY(<angle> | <zero>)',
    'rotateZ()': 'rotateZ(<angle> | <zero>)',
    'round()': 'round(<rounding-strategy>?, <calc-sum>, <calc-sum>)',
    'rounding-strategy': 'nearest | up | down | to-zero',
    'running()': 'running(<custom-ident>)',
    'saturate()': 'saturate(<number-percentage>?)',
    'scale()': 'scale([<number> | <percentage>]#{1,2})',
    'scale3d()': 'scale3d([<number> | <percentage>]#{3})',
    'scaleX()': 'scaleX(<number> | <percentage>)',
    'scaleY()': 'scaleY(<number> | <percentage>)',
    'scaleZ()': 'scaleZ(<number> | <percentage>)',
    'scroll-timeline-offset': 'auto | <length-percentage> | <element-offset>',
    'selector()': 'selector(<id-selector>)',
    'selector-list': '<complex-selector-list>',
    'selector-scope': '(<scope-start> [/ <scope-end>]?)',
    'self-position': 'center | start | end | self-start | self-end | flex-start | flex-end',
    'sepia()': 'sepia(<number-percentage>?)',
    'shadow': '<color>? && [<length>{2} <length [0,âˆž]>? <length>?] && inset?',
    'shape': "rect(<'top'>, <'right'>, <'bottom'>, <'left'>)",
    'shape()': "shape(<'fill-rule'>? from <coordinate-pair>, <shape-command>#)",
    'shape-box': '<box> | margin-box',
    'shape-command': '<move-command> | <line-command> | <hv-line-command> | <curve-command> | <smooth-command> | <arc-command> | close',
    'shape-radius': '<length-percentage> | closest-side | farthest-side',
    'side-or-corner': '[left | right] || [top | bottom]',
    'sign()': 'sign(<calc-sum>)',
    'simple-selector': '<type-selector> | <subclass-selector>',
    'simple-selector-list': '<simple-selector>#',
    'sin()': 'sin(<calc-sum>)',
    'single-animation': '<time> || <easing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [none | <keyframes-name>] || <single-animation-timeline>',
    'single-animation-composition': 'replace | add | accumulate',
    'single-animation-direction': 'normal | reverse | alternate | alternate-reverse',
    'single-animation-fill-mode': 'none | forwards | backwards | both',
    'single-animation-iteration-count': 'infinite | <number>',
    'single-animation-play-state': 'running | paused',
    'single-animation-timeline': 'auto | none | <timeline-name>',
    'single-transition': '[none | <single-transition-property>] || <time> || <easing-function> || <time>',
    'single-transition-property': 'all | <custom-ident>',
    'size': 'closest-side | closest-corner | farthest-side | farthest-corner | sides | <length-percentage [0,âˆž]>{1,2}',
    'size-condition': 'not (<size-query>) | (<size-query>) [and (<size-query>)]* | (<size-query>) [or (<size-query>)]*',
    'size-feature': '<media-feature>',
    'size-query': '<size-feature> | <size-condition>',
    'skew()': 'skew([<angle> | <zero>] , [<angle> | <zero>]?)',
    'skewX()': 'skewX(<angle> | <zero>)',
    'skewY()': 'skewY(<angle> | <zero>)',
    'smooth-command': 'smooth <by-to> <coordinate-pair> [via <coordinate-pair>]?',
    'snap-block()': 'snap-block(<length> , [start | end | near]?)',
    'snap-inline()': 'snap-inline(<length> , [left | right | near]?)',
    'source-size': '<media-condition> <source-size-value>',
    'source-size-list': '[<source-size># ,]? <source-size-value>',
    'source-size-value': '<length>',
    'sqrt()': 'sqrt(<calc-sum>)',
    'start-value': '<number> | <dimension> | <percentage>',
    'step-easing-function': 'step-start | step-end | steps(<integer>[, <step-position>]?)',
    'step-position': 'jump-start | jump-end | jump-none | jump-both | start | end',
    'steps()': 'steps(<integer>[, <step-position>]?)',
    'string()': 'string(<custom-ident> , [first | start | last | first-except]?)',
    'style-condition': 'not (<style-query>) | (<style-query>) [and (<style-query>)]* | (<style-query>) [or (<style-query>)]*',
    'style-feature': '<declaration>',
    'style-query': '<style-feature> | <style-condition>',
    'styleset()': 'styleset(<feature-value-name>#)',
    'stylistic()': 'stylistic(<feature-value-name>)',
    'subclass-selector': '<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>',
    'supports()': 'supports(<declaration>)',
    'supports-condition': 'not <supports-in-parens> | <supports-in-parens> [and <supports-in-parens>]* | <supports-in-parens> [or <supports-in-parens>]*',
    'supports-decl': '(<declaration>)',
    'supports-feature': '<supports-selector-fn> | <supports-font-tech-fn> | <supports-font-format-fn> | <supports-decl>',
    'supports-font-format-fn': 'font-format(<font-format>)',
    'supports-font-tech-fn': 'font-tech(<font-tech>)',
    'supports-in-parens': '(<supports-condition>) | <supports-feature> | <general-enclosed>',
    'supports-selector-fn': 'selector(<complex-selector>)',
    'svg-paint': 'child | child(<integer>)',
    'swash()': 'swash(<feature-value-name>)',
    'symbol': '<string> | <image> | <custom-ident>',
    'symbols()': 'symbols(<symbols-type>? [<string> | <image>]+)',
    'symbols-type': 'cyclic | numeric | alphabetic | symbolic | fixed',
    'system-color': 'Canvas | CanvasText | LinkText | VisitedText | ActiveText | ButtonFace | ButtonText | ButtonBorder | Field | FieldText | Highlight | HighlightText | Mark | MarkText | GrayText',
    'tan()': 'tan(<calc-sum>)',
    'target': '<target-counter()> | <target-counters()> | <target-text()>',
    'target-counter()': 'target-counter([<string> | <url>] , <custom-ident> , <counter-style>?)',
    'target-counters()': 'target-counters([<string> | <url>] , <custom-ident> , <string> , <counter-style>?)',
    'target-name': '<string>',
    'target-text()': 'target-text([<string> | <url>] , [content | before | after | first-letter]?)',
    'time-percentage': '<time> | <percentage>',
    'timeline-name': '<custom-ident> | <string>',
    'top': '<length> | auto',
    'track-breadth': '<length-percentage> | <flex> | min-content | max-content | auto',
    'track-list': '[<line-names>? [<track-size> | <track-repeat>]]+ <line-names>?',
    'track-repeat': 'repeat([<integer [1,âˆž]>] , [<line-names>? <track-size>]+ <line-names>?)',
    'track-size': '<track-breadth> | minmax(<inflexible-breadth> , <track-breadth>) | fit-content(<length-percentage>)',
    'transform-function': '<matrix()> | <translate()> | <translateX()> | <translateY()> | <scale()> | <scaleX()> | <scaleY()> | <rotate()> | <skew()> | <skewX()> | <skewY()>',
    'transform-list': '<transform-function>+',
    'translate()': 'translate(<length-percentage> , <length-percentage>?)',
    'translate3d()': 'translate3d(<length-percentage> , <length-percentage> , <length>)',
    'translateX()': 'translateX(<length-percentage>)',
    'translateY()': 'translateY(<length-percentage>)',
    'translateZ()': 'translateZ(<length>)',
    'type-selector': "<wq-name> | <ns-prefix>? '*'",
    'urange': "u '+' <ident-token> '?'* | u <dimension-token> '?'* | u <number-token> '?'* | u <number-token> <dimension-token> | u <number-token> <number-token> | u '+' '?'+",
    'uri': '<url>',
    'url': '<url-token> | url(<string> <url-modifier>*) | src(<string> <url-modifier>*)',
    'url-modifier': '<custom-ident> | <function>',
    'var()': 'var(<custom-property-name> , <declaration-value>?)',
    'viewport-length': 'auto | <length> | <percentage>',
    'visual-box': 'content-box | padding-box | border-box',
    'where()': 'where(<forgiving-selector-list>)',
    'wq-name': '<ns-prefix>? <ident-token>',
    'x': '<number>',
    'xyz': 'xyz | xyz-d50 | xyz-d65',
    'xyz-params': '<xyz-space> [<number> | none]{3}',
    'xyz-space': 'xyz | xyz-d50 | xyz-d65',
    'y': '<number>',
}
